# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Maximus\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Maximus\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Maximus\Repository\SettingRepository:
        class: Maximus\Repository\SettingRepository
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - Maximus\Entity\Setting

    Maximus\Setting\SettingsLoader:
        class: Maximus\Setting\SettingsLoader
        arguments:
            - '%kernel.project_dir%'
            - '@Maximus\Repository\SettingRepository'

    Maximus\Setting\Settings:
        class: Maximus\Setting\Settings
        factory:
            ['@Maximus\Setting\SettingsLoader', 'load']
        public: true

    maximus.theme.variables:
        class: ArrayObject
        factory: ['@Maximus\Setting\SettingsLoader', 'loadThemeVariables']

    maximus.theme.menus:
        class: ArrayObject
        factory: ['@Maximus\Setting\SettingsLoader', 'loadThemeMenus']

    Maximus\Asset\VersionStrategy\ThemeVersionStrategy:
        class: Maximus\Asset\VersionStrategy\ThemeVersionStrategy
        arguments:
            - '@Maximus\Setting\Settings'

    Maximus\Routing\Generator\ArticleUrlGenerator:
        class: Maximus\Routing\Generator\ArticleUrlGenerator
        public: true
        arguments:
            - '@router'

    Maximus\Twig\Extension\ArticleUrlGeneratorExtension:
        class: Maximus\Twig\Extension\ArticleUrlGeneratorExtension
        arguments:
            - '@Maximus\Routing\Generator\ArticleUrlGenerator'

    Maximus\Twig\Extension\BreadcrumbExtension:
        class: Maximus\Twig\Extension\BreadcrumbExtension

    Maximus\Twig\Extension\GoogleAnalyticsExtension:
        class: Maximus\Twig\Extension\GoogleAnalyticsExtension
        arguments:
            - '@Maximus\Setting\Settings'

    Maximus\Twig\Extension\DisqusExtension:
        class: Maximus\Twig\Extension\DisqusExtension
        arguments:
            - '@Maximus\Setting\Settings'

    maximus.menu_builder:
        class: Maximus\Menu\Builder
        arguments: ['@knp_menu.factory']

    maximus.menu.console_menu:
        class: Knp\Menu\MenuItem
        factory: ['@maximus.menu_builder', 'consoleMenu']
        tags:
            - {name: knp_menu.menu, alias: console_menu}

    Maximus\Twig\Breadcrumb:
        class: Maximus\Twig\Breadcrumb
        shared: false

    Maximus\Pygments\Pygments:
        class: Maximus\Pygments\Pygments
        arguments:
            - '%env(resolve:PIGMENTIZE)%'

    Maximus\Markdown\Markdown:
        class: Maximus\Markdown\Markdown
        public: true

    maximus.doctrine.article_pre_persist_event_listener:
        class: Maximus\Doctrine\EventListener\ArticleEventListener
        arguments:
            - '@Maximus\Markdown\Markdown'
            - '@Maximus\Service\FileUploader'
        tags:
            - {name: doctrine.event_listener, event: prePersist, lazy: true}

    maximus.doctrine.article_pre_update_event_listener:
        class: Maximus\Doctrine\EventListener\ArticleEventListener
        arguments:
            - '@Maximus\Markdown\Markdown'
            - '@Maximus\Service\FileUploader'
        tags:
            - {name: doctrine.event_listener, event: preUpdate, lazy: true}

    Maximus\Service\FileUploader:
        class: Maximus\Service\FileUploader
        arguments:
            - '@Maximus\Setting\Settings'
