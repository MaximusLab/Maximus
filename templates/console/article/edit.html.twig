{% extends 'console/base.html.twig' %}

{% block stylesheets %}
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.5/css/select2.min.css" rel="stylesheet" />
<style type="text/css">
form[name=article] {
    padding: 0 1em 1em 1em;
}
.select2-container--default .select2-selection--multiple {
    border: 1px solid #ced4da;
}
.select2-container--default .select2-search--inline .select2-search__field {
    padding-left: .75rem;
    padding-right: .75rem;
}
.select2-results__option {
    padding-left: 1rem;
}
.markdown-editor {
    border: 1px solid #ced4da;
    border-radius: .25rem;
    padding: 0.8em;
}
.markdown-editor .nav-tabs-container {
    margin: 0 -0.8em;
}
.markdown-editor .nav-tabs {
    padding: 0 0.8em;
}
.markdown-editor .tab-content {
    padding-top: 0.8em;
}
.markdown-editor-footer {
    padding-top: 0.6em;
}
a.markdown-editor-uploader {
    text-decoration: none;
}
#article_markdown_content_panel textarea, #article_html_content_preview_panel {
    min-height: 300px;
}
#article-background-image-preview img {
    width: 100%;
}
.markdown-editor-highlight {
    border-width: 2px 3px 2px 2px;
    border-color: #007bff;
}
</style>
<link rel="stylesheet" href="{{ asset('console/css/font-awesome.min.css') }}">
<link rel="stylesheet" href="{{ asset('css/article.css', 'theme') }}">
<link rel="stylesheet" href="{{ asset('css/pygments-common.css', 'theme') }}">
<link rel="stylesheet" href="{{ asset('css/pygments-monokai.css', 'theme') }}">
{% endblock stylesheets %}

{% block breadcrumb %}
{{
    breadcrumb([
        {title: 'Console Home', link: path('console_index')},
        {title: 'Articles', link: path('console_index')},
        {title: action, link: '', active: true}
    ])
}}
{% endblock breadcrumb %}

{% block body %}
    {{ form_start(form) }}
        {{ form_row(form.title) }}
        {{ form_row(form.alias) }}
        {{ form_row(form.tags) }}
        {{ form_row(form.author) }}
        {{ form_row(form.published) }}

        <div class="form-group row">
            <label class="col-form-label col-sm-2 required" for="article_published">Content</label>
            <div class="col-sm-10">
                <div class="markdown-editor">
                    <div class="nav-tabs-container">
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active link-black" data-toggle="tab" role="tab" href="#article_markdown_content_panel"
                                   aria-controls="article_markdown_content_panel" aria-selected="true">
                                    Write
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link link-black" data-toggle="tab" role="tab" href="#article_html_content_preview_panel"
                                   id="article_html_content_preview_tab" data-parser-url="{{ path('console_article_edit_parse_markdown') }}"
                                   aria-controls="article_html_content_preview_panel" aria-selected="false">
                                    Preview
                                </a>
                            </li>
                            {% if article.id is not empty %}
                            <li class="nav-item">
                                <a href="{{ path('article', article.liveViewUrlParams) }}" class="nav-link link-black" target="_blank">
                                    Live View
                                </a>
                            </li>
                            {% endif %}
                        </ul>
                    </div>
                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="article_markdown_content_panel" role="tabpanel" aria-labelledby="markdown-content-tab">
                            {{ form_widget(form.markdownContent) }}

                            <div class="clearfix markdown-editor-footer">
                                <div class="float-left">
                                    Write content with
                                    <a href="https://daringfireball.net/projects/markdown/syntax" target="_blank">Markdown</a>
                                    format
                                </div>
                                <div class="float-right">
                                    <a href="javascript:void(0);" id="markdown-editor-uploader"
                                       data-upload-url="{{ path('console_media_upload') }}"
                                       data-upload-dir="{{ constant('Maximus\\Entity\\Article::MEDIA_UPLOAD_PATH') }}"
                                    >
                                        <i class="fas fa-file-upload"></i>
                                        Upload a file
                                    </a>
                                    <input type="file" accept=".jpg,.jpeg,.png" class="d-none" id="markdown-editor-uploader-file-dialog" />
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="article_html_content_preview_panel" role="tabpanel" aria-labelledby="html-content-preview-tab">
                            <div id="article_html_content_preview_loading" class="d-none">
                                Generating Previews, Please Wait...
                            </div>
                            <div id="article_html_content_preview" class="article-content">
                                {{ article.htmlContent|raw }}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        {{ form_row(form.backgroundImagePath, {attr:{placeholder: article.backgroundImagePath|default('Choose a background image...')}}) }}

        <div class="form-group row {% if article.backgroundImagePath is empty %}d-none{% endif %}" id="article-background-image-preview">
            <div class="offset-sm-2 col-sm-10">
                <div>
                    <img src="{{ asset(article.backgroundImagePath) }}" alt="background image" />
                </div>
                <div class="text-right pt-1">
                    <button type="button" class="btn btn-outline-danger" id="delete-background-image-button"
                            data-article-id="{{ article.id }}" data-api-url="{{ path('console_media_delete_article_background_image', {id: article.id}) }}">
                        <small>Delete Background Image</small>
                    </button>
                </div>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-2">Published At</div>
            <div class="col-sm-10">
            {% if article.publishedAt is empty %}
                <span class="text-danger">Draft</span>
            {% else %}
                {{ article.publishedAt.format('Y-m-d H:i:s') }}
            {% endif %}
            </div>
        </div>

        {% if article.createdAt is not empty %}
        <div class="form-group row">
            <div class="col-sm-2">Created At</div>
            <div class="col-sm-10">
                {{ article.createdAt.format('Y-m-d H:i:s') }}
            </div>
        </div>
        {% endif %}

        <div class="pt-3">
            <button class="btn btn-primary btn-block">Submit</button>
        </div>
    {{ form_end(form) }}
{% endblock body %}

{% block javascripts %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.5/js/select2.min.js"></script>
<script type="text/javascript">
    var $articleMarkdownContent = $('#article_markdownContent');

    $('#article_tags').select2({
        placeholder: "Select Tags",
        tags: true,
        multiple: true,
        width: '100%',
        allowClear: true
    });

    $('#article_html_content_preview_tab').click(function() {
        var $tab = $(this);
        var parserUrl = $tab.data('parser-url');
        var $loading = $('#article_html_content_preview_loading');
        var $preview = $('#article_html_content_preview');
        var markdownContent = $.trim($('#article_markdown_content_panel textarea').val());

        $loading.removeClass('d-none');
        $preview.html('');

        $.post(parserUrl, {markdownContent: markdownContent}, function(html) {
            $preview.html(html);
            $loading.addClass('d-none');

            [].forEach.call(document.querySelectorAll('.gp, .c1'), function (gp) {
                gp.dataset.content = gp.textContent;
            });
        });
    });

    $('#markdown-editor-uploader').click(function() {
        $('#markdown-editor-uploader-file-dialog').trigger('click');
    });

    $('#markdown-editor-uploader-file-dialog').change(function() {
        uploadToArticleMarkdownContent(this.files);
    });

    $('#article_backgroundImagePath').change(function() {
        $.each(this.files, function(i, file) {
            showPreviewImage(file, $('#article-background-image-preview img:first'));
            $('#article-background-image-preview').removeClass('d-none');
        });
    });

    $('#delete-background-image-button').click(function() {
        if ($('#article_backgroundImagePath').siblings('label').html().match(/Choose a background image\.\.\./)) {
            resetBackgroundImagePath();
            return;
        }

        if (confirm('Do you want to delete the uploaded background image?')) {
            var $button = $(this);
            var articleId = $.trim($button.data('article-id'));

            if (!articleId.match(/^[0-9]+$/) || articleId <= 0) {
                return;
            }

            $.post($button.data('api-url'), function(response) {
                if (response.success) {
                    resetBackgroundImagePath();
                    alert('Delete successfully!');
                } else {
                    alert('Delete failed!');
                }
            }, 'json');
        }
    });

    $articleMarkdownContent.on('dragenter dragover dragleave drop', function(e) {
        e.preventDefault();
        e.stopPropagation()
    });
    $articleMarkdownContent.on('dragenter dragover', function(e) {
        if (!$articleMarkdownContent.hasClass('markdown-editor-highlight')) {
            $articleMarkdownContent.addClass('markdown-editor-highlight');
        }
    });
    $articleMarkdownContent.on('dragleave drop', function(e) {
        $articleMarkdownContent.removeClass('markdown-editor-highlight');
    });
    $articleMarkdownContent.on('drop', function(e) {
        uploadToArticleMarkdownContent(e.originalEvent.dataTransfer.files, function() {
            $articleMarkdownContent.removeClass('markdown-editor-highlight');
        });
    });

    /**
     * @param {HTMLTextAreaElement} textarea
     * @param {String}              newText
     */
    function insertNewTextToTextArea(textarea, newText)
    {
        textarea.focus();

        var pos = textarea.selectionStart;
        var scrollTop = textarea.scrollTop;
        var front = (textarea.value).substring(0, pos);
        var back = (textarea.value).substring(pos, textarea.value.length);

        textarea.value = front + newText + back;
        textarea.selectionStart = pos + newText.length;
        textarea.selectionEnd = pos + newText.length;

        textarea.focus();

        textarea.scrollTop = scrollTop;
    }

    /**
     * @param {File}   file
     * @param {jQuery} $img
     */
    function showPreviewImage(file, $img)
    {
        var reader = new FileReader();

        reader.onloadend = function() {
            $img.attr('src', reader.result);
        };

        reader.readAsDataURL(file);
    }

    /**
     * @param {FileList} files
     * @param {Function} callback
     */
    function uploadToArticleMarkdownContent(files, callback)
    {
        var uploadUrl = $('#markdown-editor-uploader').data('upload-url');
        var uploadDir = $('#markdown-editor-uploader').data('upload-dir');
        var data = new FormData();

        for (var i = 0, len = files.length; i < len; ++i) {
            data.append('files[]', files[i]);
        }
        data.append('dir', uploadDir);

        $.ajax({
            url: uploadUrl,
            type: 'POST',
            data: data,
            cache: false,
            contentType: false,
            processData: false,
            success: function(response) {
                for (var i = 0, len = response.data.urls.length; i < len; ++i) {
                    var url = response.data.urls[i];
                    var newText = '![uploaded image]('+url+')';
                    var textarea = $articleMarkdownContent.get(0);

                    insertNewTextToTextArea(textarea, newText);
                }

                callback();
            }
        });
    }

    function resetBackgroundImagePath()
    {
        var $input = $('#article_backgroundImagePath');

        $input.siblings('label').html('Choose a background image...');

        $input.val('');
        $input.attr('placeholder', '');
        $input.replaceWith($input.clone(true));

        $('#article-background-image-preview').addClass('d-none');
    }
</script>
{% endblock javascripts %}
